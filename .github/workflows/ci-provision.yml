name: CI - Build, Test, and Provision ECR

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY_PREFIX: krishnarepo/simple-restapi
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  build-and-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}  # Ensure PR merge commit is used

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build and run tests with Maven
        run: mvn clean package

  provision-ecr:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/ecr
    steps:
      - uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set ECR environment name
        id: ecrenv
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "env=dev" >> $GITHUB_OUTPUT
          fi

      - name: Check if ECR exists
        id: check_ecr
        run: |
          REPO_NAME="${{ env.ECR_REPOSITORY_PREFIX }}"
          if aws ecr describe-repositories --repository-names "$REPO_NAME" > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Init & Apply (only if not exists)
        if: steps.check_ecr.outputs.exists == 'false'
        run: |
          terraform init
          terraform apply -auto-approve \
            -var="ecr_repo_name=${{ env.ECR_REPOSITORY_PREFIX }}" \
            -var="environment=${{ steps.ecrenv.outputs.env }}" \
            -var="aws_region=${{ env.AWS_REGION }}"

  build-test-and-push:
    if: github.event_name == 'push'
    needs: provision-ecr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build and run tests with Maven
        run: mvn clean package

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_PREFIX }}
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-')
          IMAGE_TAG_COMMIT="${BRANCH_NAME}-${COMMIT_SHA}"
          IMAGE_TAG_LATEST="${BRANCH_NAME}-latest"

          echo "Building image: $IMAGE_URI:$IMAGE_TAG_COMMIT"
          docker build -t $IMAGE_URI:$IMAGE_TAG_COMMIT .

          echo "Tagging image as: $IMAGE_URI:$IMAGE_TAG_LATEST"
          docker tag $IMAGE_URI:$IMAGE_TAG_COMMIT $IMAGE_URI:$IMAGE_TAG_LATEST

          echo "Pushing image with both tags..."
          docker push $IMAGE_URI:$IMAGE_TAG_COMMIT
          docker push $IMAGE_URI:$IMAGE_TAG_LATEST
